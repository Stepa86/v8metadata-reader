#использовать "../src"
#Использовать asserts

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьОбъекты");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьМодули");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПутьКОбъекту_ОбщийМодуль_ЕДТ");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПутьКОбъекту_ОбщийМодуль_Конфигуратор");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПутьКОбъекту_Справочник_ЕДТ");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПутьКОбъекту_Справочник_Конфигуратор");
	
	Возврат ИменаТестов;
	
КонецФункции

Процедура ТестДолжен_ПроверитьОбъекты() Экспорт
	
	каталог = ИсходникиСНесколькимиПоддержками();

	генераторПутей = Новый Путь1СПоМетаданным(каталог);
	
	ФайлыСовпадают(
		генераторПутей.Путь("ПараметрСеанса.ПараметрСеанса1"),
		каталог + "\SessionParameters\ПараметрСеанса1.xml");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьМодули() Экспорт
	
	генераторПутей = Новый Путь1СПоМетаданным(ИсходникиСНесколькимиПоддержками());
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПутьКОбъекту_ОбщийМодуль_ЕДТ() Экспорт
	
	ГенераторПутей = Новый Путь1СПоМетаданным("src", "ЕДТ");

	Путь = ГенераторПутей.Путь("ОбщийМодуль.ОбщегоНазначения");

	Ожидаем.Что(Путь).Равно(ОбъединитьПути("src", "CommonModules", "ОбщегоНазначения", "ОбщегоНазначения.mdo"));

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПутьКОбъекту_ОбщийМодуль_Конфигуратор() Экспорт
	
	ГенераторПутей = Новый Путь1СПоМетаданным("src", "Конфигуратор");

	Путь = ГенераторПутей.Путь("ОбщийМодуль.ОбщегоНазначения");

	Ожидаем.Что(Путь).Равно(ОбъединитьПути("src", "CommonModules", "ОбщегоНазначения.xml"));

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПутьКОбъекту_Справочник_ЕДТ() Экспорт
	
	ГенераторПутей = Новый Путь1СПоМетаданным("src", "ЕДТ");

	Путь = ГенераторПутей.Путь("Catalog.ШаблоныАнкет");

	Ожидаем.Что(Путь).Равно(ОбъединитьПути("src", "Catalogs", "ШаблоныАнкет", "ШаблоныАнкет.mdo"));

КонецПроцедуры

Процедура ТестДолжен_ПроверитьПутьКОбъекту_Справочник_Конфигуратор() Экспорт
	
	ГенераторПутей = Новый Путь1СПоМетаданным("src", "Конфигуратор");

	Путь = ГенераторПутей.Путь("Catalog.ШаблоныАнкет");

	Ожидаем.Что(Путь).Равно(ОбъединитьПути("src", "Catalogs", "ШаблоныАнкет.xml"));

КонецПроцедуры

Функция ИсходникиСНесколькимиПоддержками()
	
	Возврат "./tests/src_base";
	
КонецФункции

Процедура ФайлыСовпадают(Знач ПолученныйПуть, Знач ОжидаемыйПуть)

	Сообщить("ПолученныйПуть: " + ПолученныйПуть);
	Сообщить("ОжидаемыйПуть: " + ОжидаемыйПуть);

	очищенныйПолученныйПуть = СтрЗаменить(ПолученныйПуть, "/", "\");
	очищенныйОжидаемыйПуть = СтрЗаменить(ОжидаемыйПуть, "/", "\");

	Утверждения.ПроверитьРавенство(
		очищенныйПолученныйПуть,
		очищенныйОжидаемыйПуть,
		"Пути к файлам должны совпадать.");
	
КонецПроцедуры

Лог = Логирование.ПолучитьЛог("oscript.app.cf_info");
Лог.УстановитьУровень(УровниЛога.Отладка);