#использовать "../src"
#Использовать asserts

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьВерсиюКонфигурацииНаПолнойПоддержке");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьВерсиюКонфигурацииСНесколькимиПоддержками");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьПолучениеОбъектовПоПодсистеме");
	
	Возврат ИменаТестов;
	
КонецФункции

Процедура ТестДолжен_ПроверитьВерсиюКонфигурацииНаПолнойПоддержке() Экспорт
	
	данныеБазовойКонфигурации = Новый ИнформацияОКонфигурации(ИсходникиНаПолнойПоддержке());
	
	Утверждения.ПроверитьРавенство(
		данныеБазовойКонфигурации.ВерсияКонфигурации(),
		"1.0.0.1",
		"Версии конфигурации должны совпадать.");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьВерсиюКонфигурацииСНесколькимиПоддержками() Экспорт
	
	данныеБазовойКонфигурации = Новый ИнформацияОКонфигурации(ИсходникиСНесколькимиПоддержками());
	
	Утверждения.ПроверитьРавенство(
		данныеБазовойКонфигурации.ВерсияКонфигурации(),
		"1.2.3.4",
		"Версии конфигурации должны совпадать.");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПолучениеОбъектовПоПодсистеме() Экспорт
	
	данныеБазовойКонфигурации = Новый ИнформацияОКонфигурации(ИсходникиСНесколькимиПоддержками());
	
	пустойМассив = данныеБазовойКонфигурации.ОбъектыПодсистемы("ОтсутствующаяПодсистема");

	Утверждения.ПроверитьРавенство(пустойМассив.Количество(), 0, "Найдены объекты отсутствующей подсистемы");

	объекты_Подсистема1 = данныеБазовойКонфигурации.ОбъектыПодсистемы("Подсистема1");
	Утверждения.ПроверитьРавенство(объекты_Подсистема1.Количество(), 39, "Должно быть найдено 39 объектов у подсистемы");

	Содержит(объекты_Подсистема1, "AccountingRegister.РегистрБухгалтерии1");
	Содержит(объекты_Подсистема1, "AccumulationRegister.РегистрНакопления1");
	Содержит(объекты_Подсистема1, "BusinessProcess.БизнесПроцесс1");
	Содержит(объекты_Подсистема1, "CalculationRegister.РегистрРасчета1");
	Содержит(объекты_Подсистема1, "Catalog.Справочник1");
	Содержит(объекты_Подсистема1, "ChartOfAccounts.ПланСчетов1");
	Содержит(объекты_Подсистема1, "ChartOfCalculationTypes.ПланВидовРасчета1");
	Содержит(объекты_Подсистема1, "ChartOfCharacteristicTypes.ПланВидовХарактеристик1");
	Содержит(объекты_Подсистема1, "CommandGroup.ГруппаКоманд1");
	Содержит(объекты_Подсистема1, "CommonAttribute.ОбщийРеквизит1");
	Содержит(объекты_Подсистема1, "CommonCommand.ОбщаяКоманда1");
	Содержит(объекты_Подсистема1, "CommonForm.Форма");
	Содержит(объекты_Подсистема1, "CommonModule.ОбщийМодуль1");
	Содержит(объекты_Подсистема1, "CommonPicture.ОбщаяКартинка1");
	Содержит(объекты_Подсистема1, "CommonTemplate.Макет");
	Содержит(объекты_Подсистема1, "Constant.Константа1");
	Содержит(объекты_Подсистема1, "DataProcessor.Обработка1");
	Содержит(объекты_Подсистема1, "DefinedType.ОпределяемыйТип1");
	Содержит(объекты_Подсистема1, "Document.Документ1");
	Содержит(объекты_Подсистема1, "DocumentJournal.ЖурналДокументов1");
	Содержит(объекты_Подсистема1, "Enum.Перечисление1");
	Содержит(объекты_Подсистема1, "EventSubscription.ПодпискаНаСобытие1");
	Содержит(объекты_Подсистема1, "ExchangePlan.ПланОбмена1");
	Содержит(объекты_Подсистема1, "FilterCriterion.КритерийОтбора1");
	Содержит(объекты_Подсистема1, "FunctionalOption.ФункциональнаяОпция1");
	Содержит(объекты_Подсистема1, "FunctionalOptionsParameter.ПараметрФункциональныхОпций1");
	Содержит(объекты_Подсистема1, "HTTPService.HTTPСервис1");
	Содержит(объекты_Подсистема1, "InformationRegister.РегистрСведений1");
	Содержит(объекты_Подсистема1, "IntegrationService.СервисИнтеграции1");
	Содержит(объекты_Подсистема1, "Report.Отчет1");
	Содержит(объекты_Подсистема1, "Role.Роль1");
	Содержит(объекты_Подсистема1, "ScheduledJob.РегламентноеЗадание1");
	Содержит(объекты_Подсистема1, "SessionParameter.ПараметрСеанса1");
	Содержит(объекты_Подсистема1, "SettingsStorage.ХранилищеНастроек1");
	Содержит(объекты_Подсистема1, "Style.Стиль1");
	Содержит(объекты_Подсистема1, "StyleItem.ЭлементСтиля1");
	Содержит(объекты_Подсистема1, "Task.Задача1");
	Содержит(объекты_Подсистема1, "WebService.WebСервис1");
	Содержит(объекты_Подсистема1, "XDTOPackage.ПакетXDTO1");

	объекты_СправочникиИДокументы = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы");

	Утверждения.ПроверитьРавенство(объекты_СправочникиИДокументы.Количество(), 2, "Должно быть найдено 2 объектов у подсистемы");

	объекты_СправочникиИДокументыСПодчиненными = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы", Истина);

	Утверждения.ПроверитьРавенство(
		объекты_СправочникиИДокументыСПодчиненными.Количество(),
		5,
		"Должно быть найдено 5 объектов у подсистемы с подчиненными");

	объекты_Справочник1 = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы.Справочник1");

	Утверждения.ПроверитьРавенство(объекты_Справочник1.Количество(), 1, "Должен быть 1 объект у СправочникиИДокументы.Справочник1");

	объекты_Справочник2 = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы.Справочник2");
	
	Утверждения.ПроверитьРавенство(объекты_Справочник2.Количество(), 1, "Должен быть 1 объект у СправочникиИДокументы.Справочник2");

	объекты_Справочник2_СПредками = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы.Справочник2", Ложь, Истина);
	
	Утверждения.ПроверитьРавенство(
		объекты_Справочник2_СПредками.Количество(),
		3,
		"Должно быть найдено 3 объектов у подсистемы СправочникиИДокументы.Справочник2 с предками");

	объекты_СПредкамиИПодчиненными = данныеБазовойКонфигурации.ОбъектыПодсистемы("СправочникиИДокументы.Справочник2", Истина, Истина);
	
	Утверждения.ПроверитьРавенство(
		объекты_СПредкамиИПодчиненными.Количество(),
		4,
		"Должно быть найдено 4 объектов у подсистемы СправочникиИДокументы.Справочник2 с предками");

КонецПроцедуры

Процедура Содержит(Знач пМассив, Знач пЗначение)

	Утверждения.Проверить(Не пМассив.Найти(пЗначение) = Неопределено, СтрШаблон("Ожидали, что значение %1 входит в массив", пЗначение));
	
КонецПроцедуры

Функция ИсходникиНаПолнойПоддержке()
	
	Возврат "./tests/src_lock";
	
КонецФункции

Функция ИсходникиСНесколькимиПоддержками()
	
	Возврат "./tests/src_base";
	
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.app.cf_info");
Лог.УстановитьУровень(УровниЛога.Отладка);